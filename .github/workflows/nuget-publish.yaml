name: Build and Publish NuGet

on:
  push:
    branches:
      - main

jobs:
  check-for-sln:
    runs-on: ubuntu-latest
    outputs:
      has_sln: ${{ steps.check_sln.outputs.has_sln }}
    steps:
      - uses: actions/checkout@v2
      - name: Check for .sln file
        id: check_sln
        run: |
          echo "Checking for solution files..."
          SLN_COUNT=$(find . -name "*.sln" | wc -l)
          if [ "$SLN_COUNT" -gt 0 ]; then
            echo "::set-output name=has_sln::true"
          else
            echo "::set-output name=has_sln::false"
          fi

  discover:
    uses: FamilySync/core-pipelines/.github/workflows/git-version.yaml@main
    secrets: inherit
    needs: check-for-sln
    if: needs.check-for-sln.outputs.has_sln == 'true'
    
  build-and-publish:
    runs-on: ubuntu-latest
    needs: check-for-sln
    if: needs.check-for-sln.outputs.has_sln == 'true'
    steps:
      - uses: actions/checkout@v2

      - name: Setup .NET Core
        uses: actions/setup-dotnet@v1
        with:
          dotnet-version: '8.0.x'

      - name: Restore dependencies
        run: dotnet restore

      - name: Build
        run: dotnet build --configuration Release --no-restore

      - name: Test
        run: dotnet test --no-restore --verbosity normal

      - name: Pack
        run: dotnet pack --configuration Release --no-build -p:PackageVersion=${{ needs.discover.outputs.version }} --output /nupkgs

      - name: Publish NuGet Packages
        run: find ./nupkgs -name "*.nupkg" -exec dotnet nuget push {} --source "github" --skip-duplicate --api-key ${{ secrets.GITHUB_TOKEN }} \;
        env:
          DOTNET_ROOT: ${{ runner.tool_cache }}/dotnet

      - name: Tag version
        if: github.ref == 'refs/heads/main' && github.event_name != 'pull_request'
        run: |
          git tag ${{ needs.discover.outputs.version_tag }}
          git push origin --tags
